---
--- A mutual exclusion protocol with test&set
---
--- Status lock = open;
--- ...
--- Loop: "Remainder Section"
---  rs: repeat while test&set(lock) = close;
---    "Critical Section"
---  cs: lock := open;
---
--- where test&set(x) atomically does the following:
--- x is set to close and the old value of x is returned.
---
--- Initially, lock is open and each process is in
--- Remainder Section (or at label rs).
---

fmod LABEL is
 sort Label .

 ops rs cs : -> Label [ctor] .
 op _~_ : Label Label -> Bool [comm] .
 eq (L:Label ~ L:Label) = true .
 eq (rs ~ cs) = false .
endfm

fmod PID is
 sort Pid .
 op _~_ : Pid Pid -> Bool [comm] .
 eq (P:Pid ~ P:Pid) = true .
endfm

fmod STATUS is
 sort Status .
 ops open close : -> Status [ctor] .
 op _~_ : Status Status -> Bool [comm] .
 eq (L:Status ~ L:Status) = true .
 eq (open ~ close) = false .
endfm

fmod TAS is
 pr (LABEL + PID + STATUS) .
 sort Sys .

 --- any initial state
 op init : -> Sys [ctor] .

 --- transitions
 op enter : Sys Pid -> Sys [ctor] .
 op leave : Sys Pid -> Sys [ctor] .

 --- observations
 op pc   : Sys Pid -> Label .
 op lock : Sys -> Status .

 vars I J : Pid .
 var  S : Sys .

 --- init
 eq pc(init,I)  = rs  [metadata "CA-1"] .
 eq lock(init) = open [metadata "CA-A"] .

--- enter
--- -------------------------------------------------------
 ceq pc(enter(S,I),J) = cs      if J = I /\ pc(S,I) = rs /\ lock(S) = open [metadata "CA-PCE1"].
 ceq pc(enter(S,I),J) = pc(S,J) if (J ~ I) = false                         [metadata "CA-PCE2"].
 ceq pc(enter(S,I),J) = pc(S,J) if (pc(S,I) ~ rs) = false                  [metadata "CA-EPCE3"].
 ceq pc(enter(S,I),J) = pc(S,J) if (lock(S) ~ close) = false               [metadata "CA-PCE4"].
---
 ceq lock(enter(S,I)) = close   if pc(S,I) = rs /\ lock(S) = open [metadata "CA-LE1"].
 ceq lock(enter(S,I)) = lock(S) if (pc(S,I) ~ rs) = false         [metadata "CA-LE2"].
 ceq lock(enter(S,I)) = lock(S) if (lock(S) ~ open) = false       [metadata "CA-LE3"].
--- -------------------------------------------------------

--- leave
--- -------------------------------------------------------
 ceq pc(leave(S,I),J) = rs      if J = I /\ pc(S,I) = cs [metadata "CA-PCV1"].
 ceq pc(leave(S,I),J) = pc(S,J) if (J ~ I) = false       [metadata "CA-PCV2"].
 ceq pc(leave(S,I),J) = pc(S,J) if (pc(S,I) ~ cs) = false[metadata "CA-PCV2"].
---
 ceq lock(leave(S,I)) = open if pc(S,I) = cs              [metadata "CA-LL1"].
 ceq lock(leave(S,I)) = lock(S) if (pc(S,I) ~ cs) = false [metadata "CA-LL1"]. 
--- -------------------------------------------------------

endfm

