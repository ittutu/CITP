in ../../Tool/citp
in gcd-assoc-prelude

fmod ASSOC-PRE is
    protecting NAT-GCD .
    protecting NAT-OPS-EXTRA .

    vars M N P : Nat .

    ceq M divides N = true if (M divides P) = true /\ (P divides N) = true [ metadata "Lemma-18" nonexec ] .
    ceq M = N if (M divides N) = true /\ (N divides M) = true [ metadata "Lemma-21" nonexec ] .
    eq gcd(M, N) divides M = true [ metadata "Lemma-23l" ] .
    eq gcd(M, N) divides N = true [ metadata "Lemma-23r" ] .
    ceq M divides gcd(N, P) = true if (M divides N) = true /\ (M divides P) = true [ metadata "Lemma-25" ] .
endfm

select #CITP# .
loop init .
		
---> Proof score of Assoc: \forall M, N, P : Nat . gcd(gcd(M, N), P) = gcd(M, gcd(N, P)) .
(goal ASSOC-PRE |- eq gcd(gcd(M:Nat, N:Nat), P:Nat) = gcd(M:Nat, gcd(N:Nat, P:Nat)) ;)
(tc)
(init Lemma-18 by M:Nat <- gcd(gcd(M#1,N#2),P#3); N:Nat <- N#2 ; P:Nat <- gcd(M#1,N#2))
(init Lemma-18 by M:Nat <- gcd(gcd(M#1,N#2),P#3); N:Nat <- M#1 ; P:Nat <- gcd(M#1,N#2))
(init Lemma-18 by M:Nat <- gcd(M#1,gcd(N#2,P#3)); N:Nat <- N#2 ; P:Nat <- gcd(N#2,P#3))
(init Lemma-18 by M:Nat <- gcd(M#1,gcd(N#2,P#3)); N:Nat <- P#3 ; P:Nat <- gcd(N#2,P#3))
(init Lemma-21 by M:Nat <- gcd(gcd(M#1,N#2),P#3); N:Nat <- gcd(M#1,gcd(N#2,P#3)))
(red)
---> QED
