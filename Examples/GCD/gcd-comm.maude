in ../../Tool/citp
in gcd

select #CITP# .
loop init .

---> Proof of Lemma 1: \forall M, N : Nat . d(M, N) = d(N, M) .
(goal NAT-OPS |- eq d(M:Nat, N:Nat) = d(N:Nat, M:Nat) ;)
(ind on M:Nat N:Nat)
(red)
---> QED

---> Proof of Lemma 2: \forall M, N : Nat . min(M, N) = min(N, M) .
(goal NAT-OPS |- eq min(M:Nat, N:Nat) = min(N:Nat, M:Nat) ;)
(ind on M:Nat N:Nat)
(red)
---> QED

fmod NAT-GCD+LEMMAS is
    protecting NAT-GCD .

    vars M N : Nat .

    eq d(M, N) = d(N, M) [ metadata "Lemma-1" nonexec ] .
    eq min(M, N) = min(N, M) [ metadata "Lemma-2" nonexec ] .
endfm

select #CITP# .
loop init .
		
---> Proof score of Comm: \forall M, N : Nat . gcd(M, N) = gcd(N, M) .
(goal NAT-GCD+LEMMAS |- eq gcd(M:Nat, N:Nat) = gcd(N:Nat, M:Nat) ;)
(ind on M:Nat N:Nat red)
(init Lemma-1 by M:Nat <- x#1 ; N:Nat <- x#2 red)
(init Lemma-2 by M:Nat <- x#1 ; N:Nat <- x#2 red)
---> QED
