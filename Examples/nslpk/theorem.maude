*** Proved using CITP on September 7th, 2018
in ../../Tool/citp

in nslpk.maude

fmod NSLPK+ is
 pr NSLPK .

 ceq N:Nonce \in nonces(S:Sys) = false
  if N:Nonce \in nonces(send1(S:Sys,P:Prin,Q:Prin)) = false [nonexec metadata "1"] .
 ceq N:Nonce \in nonces(S:Sys) = false
  if N:Nonce \in nonces(send2(S:Sys,Q:Prin,P:Prin,Np:Nonce)) = false [nonexec metadata "2"] .
 ceq N:Nonce \in nonces(S:Sys) = false
  if N:Nonce \in nonces(send3(S:Sys,P:Prin,Q:Prin,Np:Nonce,Nq:Nonce)) = false [nonexec metadata "3"] .
endfm

select #CITP# .

loop init .

---> Lemma:
(goal NSLPK+ |-
  ceq intr \in N1:Nonce = true
   if (N1:Nonce \in nonces(S:Sys)) = true ;
  ceq prop(N1:Nonce, S:Sys) = true
   if (enc1(Q1:Prin,N1:Nonce,intr) \in nw(S:Sys)) = true [nonexec] ;
  ceq prop(N2:Nonce, S:Sys) = true
   if (enc2(Q1:Prin,N1:Nonce,N2:Nonce,intr) \in nw(S:Sys)) = true [nonexec] ;)

*** 1 ***
(ind on S:Sys red tc red ca-1 red ca-1 red ca red ca red ca-1 red imp red)
*** 2 ***
(. init 6 by Q1:Prin <- Q1#7 ; N1:Nonce <- N1#8 ; N2:Nonce <- N2#6)
*** 3 ***
(. init 6 by Q1:Prin <- Q1#7 ; N1:Nonce <- N1#8 ; N2:Nonce <- N2#6)
*** 4 ***
(. init 3 by S:Sys <- x#1 ;
             N:Nonce <- N2#6 ;
             P:Prin <- z#2 ;
             Q:Prin <- z#3 ;
             Np:Nonce <- z#4 ;
             Nq:Nonce <- z#5)
(. init 6 by Q1:Prin <- Q1#7 ; N1:Nonce <- N1#8 ; N2:Nonce <- N2#6)
*** 5 ***
(. init 5 by Q1:Prin <- Q1#7 ; N1:Nonce <- N1#6)
*** 6 ***
(. init 5 by Q1:Prin <- Q1#7 ; N1:Nonce <- N1#6)
*** 7 ***
(. init 3 by S:Sys <- x#1 ;
             N:Nonce <- N1#6 ;
             P:Prin <- z#2 ;
             Q:Prin <- z#3 ;
             Np:Nonce <- z#4 ;
             Nq:Nonce <- z#5)
(. init 5 by Q1:Prin <- Q1#7 ; N1:Nonce <- N1#6)
*** 8 ***
(. init 6 by Q1:Prin <- Q1#6 ; N1:Nonce <- N1#7 ; N2:Nonce <- N2#5)
*** 9 ***
(. init 2 by S:Sys <- x#1 ;
             N:Nonce <- N2#5 ;
             P:Prin <- z#3 ;
             Q:Prin <- z#2 ;
             Np:Nonce <- z#4)
(. init 6 by Q1:Prin <- Q1#6 ; N1:Nonce <- N1#7 ; N2:Nonce <- N2#5)
*** 10 ***
(. init 5 by Q1:Prin <- Q1#6 ; N1:Nonce <- N1#5)
*** 11 ***
(. init 2 by S:Sys <- x#1 ;
             N:Nonce <- N1#5 ;
             P:Prin <- z#3 ;
             Q:Prin <- z#2 ;
             Np:Nonce <- z#4)
(. init 5 by Q1:Prin <- Q1#6 ; N1:Nonce <- N1#5)
*** 12 ***
(. init 1 by S:Sys <- x#1 ;
             N:Nonce <- N2#4 ;
             P:Prin <- z#2 ;
             Q:Prin <- z#3)
(. init 6 by Q1:Prin <- Q1#5 ; N1:Nonce <- N1#6 ; N2:Nonce <- N2#4)
*** 13 ***
(. init 1 by S:Sys <- x#1 ;
             N:Nonce <- N1#4 ;
             P:Prin <- z#2 ;
             Q:Prin <- z#3)
(. init 5 by Q1:Prin <- Q1#5 ; N1:Nonce <- N1#4)
*** 14 ***
(. init 6 by Q1:Prin <- Q1#5 ; N1:Nonce <- N1#6 ; N2:Nonce <- N2#4)
*** 15 ***
(. init 6 by Q1:Prin <- Q1#5 ; N1:Nonce <- N1#6 ; N2:Nonce <- N2#4)
*** 16 ***
(. init 5 by Q1:Prin <- Q1#5 ; N1:Nonce <- N1#4)
*** 17 ***
(. init 5 by Q1:Prin <- Q1#5 ; N1:Nonce <- N1#4)
*** 18 ***
(. init 6 by Q1:Prin <- Q1#7 ; N1:Nonce <- N1#8 ; N2:Nonce <- N2#6)
*** 19 ***
(. init 6 by Q1:Prin <- Q1#7 ; N1:Nonce <- N1#8 ; N2:Nonce <- N2#6)
*** 20 ***
(. init 6 by Q1:Prin <- Q1#7 ; N1:Nonce <- N1#8 ; N2:Nonce <- N2#6)
*** 21 ***
(. init 5 by Q1:Prin <- Q1#7 ; N1:Nonce <- N1#6)
*** 22 ***
(. init 5 by Q1:Prin <- Q1#7 ; N1:Nonce <- N1#6)
*** 23 ***
(. init 5 by Q1:Prin <- Q1#7 ; N1:Nonce <- N1#6)
*** 24 ***
(. init 6 by Q1:Prin <- Q1#6 ; N1:Nonce <- N1#7 ; N2:Nonce <- N2#5)
*** 25 ***
(. init 6 by Q1:Prin <- Q1#6 ; N1:Nonce <- N1#7 ; N2:Nonce <- N2#5)
*** 26 ***
(init 5 by Q1:Prin <- Q1#6 ; N1:Nonce <- N1#5)

