***( SpeX/SAP

  This file is part of SAP, a Syntactic Analysis & Printing library
  for Maude 3 based on REPL.

  Copyright : (C) 2020, 2021 Simion Stoilow Institute of Mathematics
              of the Romanian Academy (IMAR)
  License   : GNU General Public License v2.0 or later (GPL-2.0-or-later)
  Author    : Ionut Tutu <Ionut.Tutu@imar.ro>

)

sload ../REPL/Snippet.maude
sload ../CommonLibs/Qid.maude

*** A Trace & Pattern index for QidLists  **************************************

fmod TP-INDEX is
  protecting QID-LIST/OPS .

  *** TP-Index  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - --
  sort TP-Index .
  op [_:_] : QidList QidList -> TP-Index [ctor] .

  *** - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - --
  var QI : Qid .
  var QIL QIL1 QIL2 T P : QidList .
  var I : TP-Index .
  var FR : FindResult .

  *** find  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - --
  op find : QidList TP-Index -> FindResult .
  eq find(QIL, I) = p $find(QIL, I) .

  op $find : QidList TP-Index -> FindResult .
  eq $find(QIL, [nil : P]) = find(QIL, P) + size(P) .
  ceq $find(QIL, [QI T : P])
   = if FR :: Nat
     then FR + $find(drop(FR, QIL), [T : P])
     else $find(QIL, [T : P]) fi
   if FR := find(QIL, QI) + 1 .

  *** _>>_ (right shift an index by a QidList)  - - - - - - - - - - - - - - - --
  op _>>_ : TP-Index QidList -> TP-Index .
  eq [T : P] >> QIL = [QIL T : P] .

  *** _+_ (extend and index by a QidList)  - - - - - - - - - - - - - - - - - - -
  op _+_ : TP-Index QidList -> TP-Index .
  eq [T : P] + QIL = [T : P QIL] .

  *** end-index (reference the last qid in a list)  - - - - - - - - - - - - - --
  op end-index : QidList -> TP-Index .
  eq end-index(QIL) = [nil : QIL] .

  op end : -> TP-Index .
  eq end = [nil : nil] .
endfm

*** ----------------------------------------------------------------------------

view Snippet/IO/Qid-with-TP-index
from SNIPPET/IO to QID/OPS + TP-INDEX + LEXICAL is
  sort Tokens to QidList .
  op preprocess(S:String) to term take-until("``", trim-lnl(S:String)) .
  op read to tokenize .

  sort IdxTokens to QidList .
  sort Index to TP-Index .
  op index to basenames .
  op get-prefix(S:String, N:Nat) to term
    locate(take(N:Nat, tokenize(S:String)), S:String) .

  sort Result to QidList .
  op show to printTokens .
endv

********************************************************************************

fmod SAP-SNIPPET is
  protecting SNIPPET { Snippet/IO/Qid-with-TP-index } *
    (sort Snippet{Snippet/IO/Qid-with-TP-index} to Snippet{SAP},
     sort IdxSnippet{Snippet/IO/Qid-with-TP-index} to IdxSnippet{SAP}) .
endfm

view SAP-Snippet from REPL/IO to SAP-SNIPPET is
  sort Accumulator to Snippet{SAP} .
  sort Input to QidList .
  sort Result to QidList .
  op show to printTokens .
  sort IdxAccumulator to IdxSnippet{SAP} .
  sort Index to TP-Index .
endv

********************************************************************************
