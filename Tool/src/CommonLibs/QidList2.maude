***( SpeX/CommonLibs

  This file is part of CommonLibs (CL), a suite of Maude 3 libraries
  that extend the predefined data modules from the standard prelude.

  Copyright : (C) 2020, 2021 Simion Stoilow Institute of Mathematics
              of the Romanian Academy (IMAR)
  License   : GNU General Public License v2.0 or later (GPL-2.0-or-later)
  Author    : Ionut Tutu <Ionut.Tutu@imar.ro>

)

********************************************************************************

fmod QID-LIST2 is
  protecting QID-LIST .

  *** QidList2 (lists of lists of qids)  - - - - - - - - - - - - - - - - - - - -
  sorts NeQidList2 QidList2 .
  subsort NeQidList2 < QidList2 .
  op nil : -> QidList2 [ctor] .
  op :[_] : QidList -> NeQidList2 [ctor] .
  op __ : QidList2 QidList2 -> QidList2 [ctor assoc id: nil prec 25] .
  op __ : NeQidList2 QidList2 -> NeQidList2 [ctor ditto] .
  op __ : QidList2 NeQidList2 -> NeQidList2 [ctor ditto] .

  *** - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - --
  vars QIL QIL1 QIL2 S : QidList .
  vars QLL QLL1 QLL2 : QidList2 .

  *** size  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - --
  op size : QidList2 -> Nat .
  eq size(QLL) = size(concat(QLL)) .

  *** size2  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  op size2 : QidList2 -> Nat .
  eq size2(nil) = 0 .
  eq size2(:[QIL] QLL) = s size2(QLL) .

  *** concat  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - --
  op concat : QidList2 -> QidList .
  eq concat(nil) = nil .
  eq concat(:[QIL] QLL) = QIL concat(QLL) .

  *** _++_ (edge concatenation)  - - - - - - - - - - - - - - - - - - - - - - - -
  op _++_ : QidList2 QidList2 -> QidList2 [assoc gather (e E) id: nil prec 33] .
  eq (QLL1 :[QIL1]) ++ (:[QIL2] QLL2) = QLL1 :[QIL1 QIL2] QLL2 .

  *** zip  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  op zip : QidList2 QidList2 -> QidList .
  eq zip(nil, nil) = nil .
  eq zip(nil, :[QIL2] QLL2) = QIL2 zip(nil, QLL2) .
  eq zip(:[QIL1] QLL1, nil) = QIL1 zip(QLL1, nil) .
  eq zip(:[QIL1] QLL1, :[QIL2] QLL2) = QIL1 QIL2 zip(QLL1, QLL2) .

  *** intercalate  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  op intercalate : QidList QidList2 -> QidList .
  eq intercalate(S, :[QIL1] :[QIL2] QLL) = QIL1 S intercalate(S, :[QIL2] QLL) .
  eq intercalate(S, QLL) = concat(QLL) [owise] .
endfm

********************************************************************************
