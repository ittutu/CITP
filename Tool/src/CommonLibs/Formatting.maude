***( SpeX/CommonLibs

  This file is part of CommonLibs (CL), a suite of Maude 3 libraries
  that extend the predefined data modules from the standard prelude.

  Copyright : (C) 2020-2022 Simion Stoilow Institute of Mathematics
              of the Romanian Academy (IMAR)
  License   : GNU General Public License v2.0 or later (GPL-2.0-or-later)
  Author    : Ionut Tutu <Ionut.Tutu@imar.ro>

)

sload ./String.maude
sload ./QidList.maude

********************************************************************************

fmod STRING/FORMATTING is
  protecting STRING/OPS .

  var S : String .

  *** emphasize  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  op emph : String -> String .
  eq emph(S) = printTokens('\m '\!) + S + printTokens('\o) .

  *** alert  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  op alert : String -> String .
  eq alert(S) = printTokens('\r '\!) + S + printTokens('\o) .

  *** trim  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - --
  op trim : String -> String .
  ceq trim(S) = trim(substr(S, 0, sd(length(S), 1)))
   if substr(S, sd(length(S), 1), 1) = "\n" .
  ceq trim(S) = trim(substr(S, 1, sd(length(S), 1)))
   if substr(S, 0, 1) = "\n" .
  eq trim(S) = S [owise] .

  *** hrule  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  op hrule : -> String .
  eq hrule = "----------------------------------------"
           + "----------------------------------------" .
endfm

********************************************************************************

fmod QID-LIST/FORMATTING is
  protecting QID-LIST/OPS .
  protecting STRING/OPS .

  var  QI : Qid .
  vars QIL QIL1 QIL2 P : QidList .
  var  NQIL : NeQidList .

  *** emphasize  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  op emph : QidList -> QidList .
  eq emph(QIL) = '\m '\! QIL '\o .

  op unemph : QidList -> QidList .
  eq unemph(QIL) = '\o QIL '\m '\! .

  *** alert  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  op alert : QidList -> QidList .
  eq alert(QIL) = '\r '\! QIL '\o .

  op unalert : QidList -> QidList .
  eq unalert(QIL) = '\o QIL '\r '\! .

  *** log  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  op log : QidList -> QidList .
  eq log(QIL) = '\c '\! QIL '\o .

  *** spaced  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - --
  op spaced : QidList -> QidList .
  eq spaced(QIL) = '\s QIL '\s .

  op spaced-emph : QidList -> QidList .
  eq spaced-emph(QIL) = spaced(emph(QIL)) .

  op spaced-alert : QidList -> QidList .
  eq spaced-alert(QIL) = spaced(alert(QIL)) .

  *** clear-formatting  - - - - - - - - - - - - - - - - - - - - - - - - - - - --
  op clear-formatting : QidList -> QidList .
  eq clear-formatting(QIL)
   = remove('\s '\n '\t '\! '\? '\u '\f '\x '\h '\o '\p
      '\r '\g '\y '\m '\c '\w '\P '\R '\G '\Y '\M '\X '\W, QIL) .

  op clear-non-space-formatting : QidList -> QidList .
  eq clear-non-space-formatting(QIL)
   = remove('\! '\? '\u '\f '\x '\h '\o '\p
      '\r '\g '\y '\m '\c '\w '\P '\R '\G '\Y '\M '\X '\W, QIL) .

  *** hrule  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  op hrule : -> QidList .
  eq hrule = qid("----------------------------------------"
               + "----------------------------------------") .

  *** prefix  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - --
  op prefix : QidList NeQidList QidList -> QidList .
  eq prefix(P, NQIL, QIL1 NQIL QIL2)
   = prefix(P, NQIL, QIL1) NQIL prefix(P, NQIL, QIL2) .
  eq prefix(P, NQIL, QIL) = P QIL [owise] .

  *** mk-page  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  op mk-page : QidList -> QidList .
  eq mk-page(QIL)
   = prefix('| '\s, '\n, QIL) '\n
     qid("|_" + replicate("_",
        length(printTokens(clear-non-space-formatting(last-line(QIL)))))) .

  op mk-page : QidList QidList -> QidList .
  eq mk-page(QIL1, nil) = QIL1 .
  eq mk-page(QIL1, QIL2) = QIL1 '\n mk-page(QIL2) [owise] .
endfm

********************************************************************************
