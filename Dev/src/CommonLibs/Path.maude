***( SpeX/CommonLibs

  This file is part of CommonLibs (CL), a suite of Maude 3 libraries
  that extend the predefined data modules from the standard prelude.

  Copyright : (C) 2020, 2021 Simion Stoilow Institute of Mathematics
              of the Romanian Academy (IMAR)
  License   : GNU General Public License v2.0 or later (GPL-2.0-or-later)
  Author    : Ionut Tutu <Ionut.Tutu@imar.ro>

)

sload ./String.maude

********************************************************************************

fth OS-PATH is
  protecting STRING .
  op absolute-path : String -> Bool .
  op path-delimiter : -> String .
endfth

*** ----------------------------------------------------------------------------

view Unix-like from OS-PATH to STRING/OPS is
  op absolute-path(P:String) to term P:String begins with "/" .
  op path-delimiter to term "/" .
endv

*** ----------------------------------------------------------------------------

fmod PATH/OPS { P :: OS-PATH} is
  protecting STRING/OPS .

  vars P P' : String .
  var  N : Nat .
  var  FR : FindResult .

  op basename : String -> String .
  ceq basename(P)
   = if FR :: Nat
     then substr(P, FR + length(path-delimiter), N)
     else P fi
   if N := length(P) /\ FR := rfind(P, path-delimiter, N) .

  op dirname : String -> String .
  ceq dirname(P)
   = if FR :: Nat
     then substr(P, 0, FR)
     else "" fi
   if N := length(P) /\ FR := rfind(P, path-delimiter, N) .

  op join-path : String String -> String .
  eq join-path("", P) = P .
  eq join-path(P, "") = P .
  eq join-path(P, P') = if absolute-path(P')
    then P' else P + path-delimiter + P' fi [owise] .
endfm

********************************************************************************
