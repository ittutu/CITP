***( SpeX

  This file is part of SpeX, a simple framework for working with
  formal specifications based on SAP and REPL.

  Copyright : (C) 2021, 2022 Simion Stoilow Institute of Mathematics
              of the Romanian Academy (IMAR)
  License   : GNU General Public License v2.0 or later (GPL-2.0-or-later)
  Author    : Ionut Tutu <Ionut.Tutu@imar.ro>

)

sload ./Language.maude
sload ./CommonLibs/Dictionary.maude

********************************************************************************

view SpeX/Lang from TRIV to SPEX/LANG/BASE is
  sort Elt to SpeX/Lang .
endv

*** ----------------------------------------------------------------------------

fmod SPEX/DB/RECORD is
  sort SpeX/DB/Record .
  op nil : -> SpeX/DB/Record [ctor] .
endfm

*** ----------------------------------------------------------------------------

view SpeX/DB/Record from TRIV to SPEX/DB/RECORD is
  sort Elt to SpeX/DB/Record .
endv

*** ----------------------------------------------------------------------------

fmod SPEX/DATABASE is
  protecting DICTIONARY { SpeX/Lang, SpeX/DB/Record } *
    (sort KeyValuePair{SpeX/Lang,SpeX/DB/Record} to SpeX/DB-Entry,
     sort Dict{SpeX/Lang,SpeX/DB/Record} to SpeX/DB) .
endfm

*** ----------------------------------------------------------------------------

view SpeX/DB from TRIV to SPEX/DATABASE is
  sort Elt to SpeX/DB .
endv

********************************************************************************

fth DATA is
  sort Data .
  op nil : -> Data .
endfth

*** ----------------------------------------------------------------------------

fmod SPEX/DATA { L :: LANGUAGE, D :: DATA } is
  including SPEX/DATABASE .
  including SPEX/LANG { L } .

  var L : L$Lid .
  var D : D$Data .
  var DB : SpeX/DB .

  *** record  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - --
  op record : D$Data -> SpeX/DB/Record [ctor] .

  op has-record : SpeX/DB L$Lid -> Bool .
  eq has-record(DB, L) = defined(DB[lang(L)]) .

  *** read  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - --
  op _[_] : SpeX/DB L$Lid ~> D$Data [prec 23] .
  ceq DB[L] = D if record(D) := DB[lang(L)] .
  ceq DB[L] = nil if nil := DB[lang(L)] .
endfm

********************************************************************************
