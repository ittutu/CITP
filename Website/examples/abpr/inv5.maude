*****************************************************************************************************
---> for this proof, the denotational semantics of transitions "=>" will be that of equality "=" <---
*****************************************************************************************************
in abp

mod INV5 is inc ABP .
 vars B B1 B2 : Bit . 
 vars P P1 : Packet .
 vars Ch1 Cn1 Ca1 : Channel1 .
 vars Ch2,Cn2 Ca2 : Channel2 .
 var N : PNat .
 var D : Data .
 var S : Reach .
--- lemmas ---
 ceq B =  B1 if [B1,N,(Ch1,< B,P >,Cn1),B1,D,Ch2]: Reach[nonexec metadata "inv2"].
 ceq B2 = B1 if [B1,N,Ch1,B2,D,(Ch2,B1,Cn2)]: Reach[nonexec metadata "inv3"].
endm

select #CITP# .
loop init .

(goal INV5 |-
crl P:Packet => pac(N:PNat)if[B:Bit,N:PNat,(Ch1:Channel1,< B:Bit,P:Packet >,Cn1:Channel1),B2:Bit,D:Data,Ch2:Channel2]:= S:Reach ;)

(indx on S:Reach red cs red tc red imp red)

---> rec1 <--- 
(. cp-l 1 >< 3
   init inv3 by B1:Bit <- B1#1 ; N:PNat <- N#2 ; B2:Bit <- B2#4 ; D:Data <- D#5 ;
        Ch1:Channel1 <- Ch1#8,< not B1#1,P#7 >,Cn1#9 ; Ch2:Channel2 <- Ch2#6 ; B1:Bit <- B1#1 ; Cn2:Channel2 <- (empty).Channel2
   cp-l 1 >< 5
   init inv2 by B1:Bit <- B1#1 ; N:PNat <- N#2 ; D:Data <- D#5 ;
	Ch1:Channel1 <- Ch1#8 ; B:Bit <- not B1#1 ; P:Packet <- P#7 ; Cn1:Channel1 <- Cn1#9 ; Ch2:Channel2 <- Ch2#6,B1#1)